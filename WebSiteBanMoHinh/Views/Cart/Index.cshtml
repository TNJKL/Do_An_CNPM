@using WebSiteBanMoHinh.Models.ViewModels
@using WebSiteBanMoHinh.Resources;
@inject LanguageService ShareLocallizer
@model CartItemViewModel

<section id="cart_items" style="background-color: var(--background-color); padding: 40px 0;">
    <div class="container">
        <div class="cart_info" style="background: white; border-radius: 12px; box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05); overflow: hidden; padding: 20px;">
            <table class="table table-condensed" style="margin-bottom: 0; border-collapse: separate; border-spacing: 0;">
                <thead>
                    <tr class="cart_menu" style="background: linear-gradient(135deg, var(--primary-color), var(--secondary-color)); color: white; border-radius: 8px 8px 0 0;">
                        <th class="image" style="padding: 15px; font-weight: 600; text-transform: uppercase; font-size: 0.9em;">@ShareLocallizer.GetLocalizedHTML("Image")</th>
                        <th class="description" style="padding: 15px; font-weight: 600; text-transform: uppercase; font-size: 0.9em;">@ShareLocallizer.GetLocalizedHTML("Product Name")</th>
                        <th class="price" style="padding: 15px; font-weight: 600; text-transform: uppercase; font-size: 0.9em;">@ShareLocallizer.GetLocalizedHTML("Price")</th>
                        <th class="quantity" style="padding: 15px; font-weight: 600; text-transform: uppercase; font-size: 0.9em;">@ShareLocallizer.GetLocalizedHTML("Quantity")</th>
                        <th class="total" style="padding: 15px; font-weight: 600; text-transform: uppercase; font-size: 0.9em;">@ShareLocallizer.GetLocalizedHTML("Total")</th>
                        <th style="padding: 15px;"></th>
                    </tr>
                </thead>
                <tbody id="cartTableBody">
                    @if (Model.CartItems.Count > 0)
                    {
                        foreach (var item in Model.CartItems)
                        {
                            <tr data-product-id="@item.ProductId" style="border-bottom: 1px solid #f0f0f0; transition: background 0.3s ease;" onmouseover="this.style.background='#fafafa'" onmouseout="this.style.background='white'">
                                <td class="cart_product" style="padding: 20px; vertical-align: middle;">
                                    <a href=""><img src="~/media/products/@item.Image" alt="@item.ProductName" style="width: 70px; height: 100px; object-fit: cover; border-radius: 8px; border: 2px solid var(--secondary-color); transition: transform 0.3s ease, border-color 0.3s ease;" onmouseover="this.style.transform='scale(1.05)'; this.style.borderColor=var(--hover-color)" onmouseout="this.style.transform='scale(1)'; this.style.borderColor=var(--secondary-color)"></a>
                                </td>
                                <td class="cart_description" style="padding: 20px; vertical-align: middle;">
                                    <h4 style="margin: 0; font-size: 1.1em;"><a href="" style="color: var(--primary-color); font-weight: 500; text-decoration: none; transition: color 0.3s ease;" onmouseover="this.style.color=var(--hover-color)" onmouseout="this.style.color=var(--primary-color)">@item.ProductName</a></h4>
                                </td>
                                <td class="cart_price" style="padding: 20px; vertical-align: middle;">
                                    <p style="color: var(--text-color); font-weight: 500; margin: 0; font-size: 1em;">@item.Price.ToString("#,##0 VNĐ")</p>
                                </td>
                                <td class="cart_quantity" style="padding: 20px; vertical-align: middle;">
                                    <div style="display: flex; align-items: center; gap: 8px; justify-content: center; background: #f9f9f9; padding: 8px; border-radius: 8px;">
                                        <a class="btn btn-increase" data-id="@item.ProductId" style="background: var(--primary-color); color: white; padding: 6px 12px; border-radius: 5px; text-decoration: none; font-weight: 600; transition: all 0.3s ease;" onmouseover="this.style.background=var(--hover-color)" onmouseout="this.style.background=var(--primary-color)">+</a>
                                        <input class="btn quantity-input" type="text" name="quantity" value="@item.Quantity" autocomplete="off" style="width: 45px; text-align: center; border: 2px solid var(--secondary-color); border-radius: 5px; padding: 6px; background: white; color: var(--text-color); font-weight: 500;" readonly>
                                        <a class="btn btn-decrease" data-id="@item.ProductId" style="background: var(--primary-color); color: white; padding: 6px 12px; border-radius: 5px; text-decoration: none; font-weight: 600; transition: all 0.3s ease;" onmouseover="this.style.background=var(--hover-color)" onmouseout="this.style.background=var(--primary-color)">-</a>
                                    </div>
                                </td>
                                <td class="cart_total" style="padding: 20px; vertical-align: middle;">
                                    <p class="cart_total_price" style="color: var(--primary-color); font-weight: 600; margin: 0; font-size: 1.1em;">@Model.CartItems.Where(x => x.ProductId == @item.ProductId).Sum(x => x.Quantity * x.Price).ToString("#,##0 VNĐ")</p>
                                </td>
                                <td class="cart_delete" style="padding: 20px; vertical-align: middle;">
                                    <a class="cart_quantity_delete btn-remove" data-id="@item.ProductId" style="color: #ff4d4d; font-size: 1.3em; transition: all 0.3s ease;" onmouseover="this.style.color='#cc0000'; this.style.transform='scale(1.1)'" onmouseout="this.style.color='#ff4d4d'; this.style.transform='scale(1)'"><i class="fa fa-times"></i></a>
                                </td>
                            </tr>
                        }
                        <tr style="background: linear-gradient(135deg, #fff9e6, #fff5cc); border-top: 2px solid var(--secondary-color);">
                            <td colspan="3" style="padding: 25px; vertical-align: top;">
                                <div style="display: flex; flex-direction: column; gap: 20px; background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);">
                                    <div style="display: flex; align-items: center; gap: 15px;">
                                        <strong style="color: var(--text-color); font-size: 1.2em; font-weight: 600;">@ShareLocallizer.GetLocalizedHTML("Grand Total:")</strong>
                                        <p class="cart_total_price" id="grandTotal" style="margin: 0; color: var(--primary-color); font-size: 1.5em; font-weight: 700;">@Model.GrandTotal.ToString("#,##0 VNĐ")</p>
                                    </div>
                                    <form style="display: flex; align-items: center; gap: 12px; flex-wrap: wrap;">
                                        <label style="color: var(--text-color); font-weight: 500; font-size: 1em;">Coupon Code:</label>
                                        <input type="text" class="form-control coupon-value" style="border: 2px solid var(--secondary-color); border-radius: 25px; padding: 8px 15px; width: 180px; transition: border-color 0.3s ease;" onfocus="this.style.borderColor=var(--hover-color)" onblur="this.style.borderColor=var(--secondary-color)" />
                                        <span class="text text-success" id="couponCode" style="color: #28a745; font-size: 0.9em;">@Model.CouponCode</span>
                                        <input type="button" value="Apply" class="btn btn-apply-coupon" style="background: linear-gradient(135deg, var(--primary-color), var(--secondary-color)); color: white; border: none; padding: 8px 20px; border-radius: 25px; font-weight: 600; transition: all 0.3s ease; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);" onmouseover="this.style.background=var(--hover-color)" onmouseout="this.style.background='linear-gradient(135deg, var(--primary-color), var(--secondary-color))'" />
                                    </form>
                                    <div style="display: flex; align-items: center; gap: 15px;">
                                        <strong style="color: var(--text-color); font-size: 1.1em; font-weight: 600;">@ShareLocallizer.GetLocalizedHTML("Shipping Cost:")</strong>
                                        <p class="cart_total_price" id="shippingCost" style="margin: 0; color: var(--primary-color); font-size: 1.2em; font-weight: 600;">@Model.ShippingCost.ToString("#,##0 VNĐ")</p>
                                        <a class="btn-delete-shipping" style="color: #ff4d4d; text-decoration: none; font-size: 0.9em; font-weight: 500; margin-left: 10px; transition: all 0.3s ease;" onmouseover="this.style.color='#cc0000'; this.style.transform='scale(1.05)'" onmouseout="this.style.color='#ff4d4d'; this.style.transform='scale(1)'">Xóa phí ship</a>
                                    </div>
                                </div>
                            </td>
                            <td colspan="2" style="padding: 25px; vertical-align: top;">
                                <div style="background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);">
                                    <div class="form-group" style="margin-bottom: 20px;">
                                        <label style="color: var(--text-color); font-weight: 500; font-size: 1em;">Họ tên</label>
                                        <input type="text" id="fullName" name="fullName" class="form-control" style="width: 100%; padding: 10px; border: 2px solid var(--secondary-color); border-radius: 5px; background: white; color: var(--text-color); font-size: 0.9em;" placeholder="Ví dụ: Nguyễn Văn A" value="@TempData["FullName"]" />
                                    </div>
                                    <div class="form-group" style="margin-bottom: 20px;">
                                        <label style="color: var(--text-color); font-weight: 500; font-size: 1em;">Số điện thoại</label>
                                        <input type="text" id="phoneNumber" name="phoneNumber" class="form-control" style="width: 100%; padding: 10px; border: 2px solid var(--secondary-color); border-radius: 5px; background: white; color: var(--text-color); font-size: 0.9em;" placeholder="Ví dụ: 0901234567" value="@TempData["PhoneNumber"]" />
                                    </div>
                                    <div class="form-group" style="margin-bottom: 20px;">
                                        <label style="color: var(--text-color); font-weight: 500; font-size: 1em;">Tỉnh thành phố</label>
                                        <select class="css_select" id="tinh" name="tinh" title="Chọn Tỉnh Thành" style="width: 100%; padding: 10px; border: 2px solid var(--secondary-color); border-radius: 5px; background: white; color: var(--text-color); font-size: 0.9em; transition: border-color 0.3s ease;" onfocus="this.style.borderColor=var(--hover-color)" onblur="this.style.borderColor=var(--secondary-color)">
                                            <option value="0">Tỉnh Thành</option>
                                        </select>
                                    </div>
                                    <div class="form-group" style="margin-bottom: 20px;">
                                        <label style="color: var(--text-color); font-weight: 500; font-size: 1em;">Quận huyện</label>
                                        <select class="css_select" id="quan" name="quan" title="Chọn Quận Huyện" style="width: 100%; padding: 10px; border: 2px solid var(--secondary-color); border-radius: 5px; background: white; color: var(--text-color); font-size: 0.9em; transition: border-color 0.3s ease;" onfocus="this.style.borderColor=var(--hover-color)" onblur="this.style.borderColor=var(--secondary-color)">
                                            <option value="0">Quận Huyện</option>
                                        </select>
                                    </div>
                                    <div class="form-group" style="margin-bottom: 20px;">
                                        <label style="color: var(--text-color); font-weight: 500; font-size: 1em;">Phường xã</label>
                                        <select class="css_select" id="phuong" name="phuong" title="Chọn Phường Xã" style="width: 100%; padding: 10px; border: 2px solid var(--secondary-color); border-radius: 5px; background: white; color: var(--text-color); font-size: 0.9em; transition: border-color 0.3s ease;" onfocus="this.style.borderColor=var(--hover-color)" onblur="this.style.borderColor=var(--secondary-color)">
                                            <option value="0">Phường Xã</option>
                                        </select>
                                    </div>
                                    <div class="form-group" style="margin-bottom: 20px;">
                                        <label style="color: var(--text-color); font-weight: 500; font-size: 1em;">Số nhà, đường</label>
                                        <input type="text" id="houseNumber" name="houseNumber" class="form-control" style="width: 100%; padding: 10px; border: 2px solid var(--secondary-color); border-radius: 5px; background: white; color: var(--text-color); font-size: 0.9em;" placeholder="Ví dụ: 123 Đường Lê Lợi" />
                                    </div>
                                    <button type="button" class="btn btn-primary btn-add-shipping" style="width: 100%; background: linear-gradient(135deg, var(--primary-color), var(--secondary-color)); color: white; border: none; padding: 12px; border-radius: 25px; font-weight: 600; transition: all 0.3s ease; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);" onmouseover="this.style.background=var(--hover-color)" onmouseout="this.style.background='linear-gradient(135deg, var(--primary-color), var(--secondary-color))'">Tính phí ship</button>
                                </div>
                            </td>
                            <td style="padding: 25px; vertical-align: top;">
                                <div style="display: flex; flex-direction: column; gap: 15px; background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);">
                                    <a class="btn btn-clear-cart" style="background: #ff4d4d; color: white; padding: 12px 20px; border-radius: 25px; text-decoration: none; text-align: center; font-weight: 600; transition: all 0.3s ease; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);" onmouseover="this.style.background='#cc0000'" onmouseout="this.style.background='#ff4d4d'">@ShareLocallizer.GetLocalizedHTML("Clear")</a>
                                    @if (User.Identity?.IsAuthenticated ?? false)
                                    {
                                        if (User.IsInRole("CUSTOMER"))
                                        {
                                            if (@Model.ShippingCost <= 0)
                                            {
                                                <p id="shippingMessage" style="color: #ff4d4d; font-size: 0.9em; text-align: center; margin: 10px 0;">Vui lòng nhập thông tin nơi ở để tính phí vận chuyển.</p>
                                                <a disabled="disabled" class="btn btn-checkout" asp-controller="Checkout" asp-action="Checkout" style="background: #ccc; color: white; padding: 12px 20px; border-radius: 25px; text-decoration: none; text-align: center; font-weight: 600; cursor: not-allowed;">@ShareLocallizer.GetLocalizedHTML("Checkout")</a>
                                                <form method="POST" asp-action="CreatePaymentMomo" asp-controller="Payment" style="margin-top: 10px;">
                                                    <input type="hidden" name="Amount" value="@Model.GrandTotal.ToString("F0")" />
                                                    <input type="hidden" name="OrderId" value="@Guid.NewGuid().ToString()" />
                                                    <input type="hidden" name="OrderInfo" value="Thanh toán Momo cho đơn hàng tại Hutech Figure Store" />
                                                    <input type="hidden" name="FullName" value="@User.Identity.Name" />
                                                    <button class="btn" name="PayUrl" type="submit" disabled style="background: #ea4c89; color: white; padding: 12px 20px; border-radius: 25px; border: none; width: 100%; font-weight: 600; display: flex; align-items: center; justify-content: center; gap: 8px; transition: all 0.3s ease; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);" onmouseover="this.style.background='#d43f78'" onmouseout="this.style.background='#ea4c89'">
                                                        <img src="https://cdn.haitrieu.com/wp-content/uploads/2022/10/Logo-MoMo-Circle.png" alt="Momo" style="height: 20px; width: auto;" />
                                                        Pay with MoMo
                                                    </button>
                                                </form>
                                                <form method="POST" asp-action="CreatePaymentUrlVnpay" asp-controller="Payment">
                                                    <input type="hidden" name="Name" value="@User.Identity.Name" />
                                                    <input type="hidden" name="Amount" value="@Model.GrandTotal.ToString("F0")" />
                                                    <input type="hidden" name="OrderDescription" value="Thanh toán qua Vnpay tại Hutech FigureStore" />
                                                    <input type="hidden" name="OrderType" value="other" />
                                                    <button class="btn" type="submit" disabled style="background: #0066b2; color: white; padding: 12px 20px; border-radius: 25px; border: none; width: 100%; font-weight: 600; display: flex; align-items: center; justify-content: center; gap: 8px; transition: all 0.3s ease; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);" onmouseover="this.style.background='#005599'" onmouseout="this.style.background='#0066b2'">
                                                        <img src="https://cdn.haitrieu.com/wp-content/uploads/2022/10/Icon-VNPAY-QR.png" alt="VNPay" style="height: 20px; width: auto;" />
                                                        Pay with VNPay
                                                    </button>
                                                </form>
                                            }
                                            else
                                            {
                                                <a onclick="return confirm('Xác nhận đặt hàng ?')" class="btn btn-checkout" asp-controller="Checkout" asp-action="Checkout" style="background: linear-gradient(135deg, var(--primary-color), var(--secondary-color)); color: white; padding: 12px 20px; border-radius: 25px; text-decoration: none; text-align: center; font-weight: 600; transition: all 0.3s ease; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);" onmouseover="this.style.background=var(--hover-color)" onmouseout="this.style.background='linear-gradient(135deg, var(--primary-color), var(--secondary-color))'">@ShareLocallizer.GetLocalizedHTML("Checkout")</a>
                                                <form method="POST" asp-action="CreatePaymentMomo" asp-controller="Payment" style="margin-top: 10px;">
                                                    <input type="hidden" name="Amount" value="@Model.GrandTotal.ToString("F0")" />
                                                    <input type="hidden" name="OrderId" value="@Guid.NewGuid().ToString()" />
                                                    <input type="hidden" name="OrderInfo" value="Thanh toán Momo cho đơn hàng tại Hutech Figure Store" />
                                                    <input type="hidden" name="FullName" value="@User.Identity.Name" />
                                                    <button class="btn" name="PayUrl" type="submit" style="background: #ea4c89; color: white; padding: 12px 20px; border-radius: 25px; border: none; width: 100%; font-weight: 600; display: flex; align-items: center; justify-content: center; gap: 8px; transition: all 0.3s ease; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);" onmouseover="this.style.background='#d43f78'" onmouseout="this.style.background='#ea4c89'">
                                                        <img src="https://cdn.haitrieu.com/wp-content/uploads/2022/10/Logo-MoMo-Circle.png" alt="Momo" style="height: 20px; width: auto;" />
                                                        Pay with MoMo
                                                    </button>
                                                </form>
                                                <form method="POST" asp-action="CreatePaymentUrlVnpay" asp-controller="Payment">
                                                    <input type="hidden" name="Name" value="@User.Identity.Name" />
                                                    <input type="hidden" name="Amount" value="@Model.GrandTotal.ToString("F0")" />
                                                    <input type="hidden" name="OrderDescription" value="Thanh toán qua Vnpay tại Hutech FigureStore" />
                                                    <input type="hidden" name="OrderType" value="other" />
                                                    <button class="btn" type="submit" style="background: #0066b2; color: white; padding: 12px 20px; border-radius: 25px; border: none; width: 100%; font-weight: 600; display: flex; align-items: center; justify-content: center; gap: 8px; transition: all 0.3s ease; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);" onmouseover="this.style.background='#005599'" onmouseout="this.style.background='#0066b2'">
                                                        <img src="https://cdn.haitrieu.com/wp-content/uploads/2022/10/Icon-VNPAY-QR.png" alt="VNPay" style="height: 20px; width: auto;" />
                                                        Pay with VNPay
                                                    </button>
                                                </form>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <p style="color: #ff4d4d; font-size: 0.9em; text-align: center; margin: 10px 0;">Vui lòng đăng nhập để thanh toán.</p>
                                        <a asp-controller="Account" asp-action="Login" class="btn" style="background: #007bff; color: white; padding: 12px 20px; border-radius: 25px; text-decoration: none; text-align: center; font-weight: 600;">Đăng nhập</a>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                    else
                    {
                        <tr id="emptyCartMessage">
                            <td colspan="6" style="padding: 60px; text-align: center;">
                                <h4 style="color: var(--text-color); margin: 0; font-weight: 500; font-size: 1.5em;">@ShareLocallizer.GetLocalizedHTML("Your Cart is Empty")</h4>
                                <p style="color: var(--text-color); opacity: 0.7; margin-top: 10px;">Hãy khám phá bộ sưu tập figure anime của chúng tôi!</p>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Khôi phục giá trị từ Session nếu có
            var savedAddress = @Html.Raw(Json.Serialize(new { City = TempData["City"], District = TempData["District"], Ward = TempData["Ward"], HouseNumber = TempData["HouseNumber"] }));

            // Hàm cập nhật trạng thái nút thanh toán
            function updateCheckoutButtons() {
                var shippingCostText = $('#shippingCost').text().trim();
                var shippingCost = parseFloat(shippingCostText.replace(/[^0-9,-]+/g, '').replace(',', '')) || 0;
                var checkoutButton = $('a.btn-checkout');
                var momoButton = $('form[action$="/Payment/CreatePaymentMomo"] button');
                var vnpayButton = $('form[action$="/Payment/CreatePaymentUrlVnpay"] button');

                if (shippingCost <= 0) {
                    checkoutButton
                        .attr('disabled', 'disabled')
                        .css({
                            'background': '#ccc',
                            'cursor': 'not-allowed'
                        })
                        .prop('disabled', true);
                    momoButton
                        .attr('disabled', 'disabled')
                        .css({
                            'background': '#ea4c89',
                            'cursor': 'not-allowed'
                        })
                        .prop('disabled', true);
                    vnpayButton
                        .attr('disabled', 'disabled')
                        .css({
                            'background': '#0066b2',
                            'cursor': 'not-allowed'
                        })
                        .prop('disabled', true);
                } else {
                    checkoutButton
                        .removeAttr('disabled')
                        .css({
                            'background': 'linear-gradient(135deg, var(--primary-color), var(--secondary-color))',
                            'cursor': 'pointer'
                        })
                        .prop('disabled', false);
                    momoButton
                        .removeAttr('disabled')
                        .css({
                            'background': '#ea4c89',
                            'cursor': 'pointer'
                        })
                        .prop('disabled', false);
                    vnpayButton
                        .removeAttr('disabled')
                        .css({
                            'background': '#0066b2',
                            'cursor': 'pointer'
                        })
                        .prop('disabled', false);
                }
            }

            // Hàm cập nhật số lượng giỏ hàng
            function updateCartCount() {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetCartCount", "Cart")',
                    success: function (result) {
                        $('#cartCount').text(result.count);
                    }
                });
            }

            // Tăng số lượng
            $('.btn-increase').click(function () {
                var productId = $(this).data('id');
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("Increase", "Cart")',
                    data: { Id: productId },
                    success: function (result) {
                        if (result.success) {
                            var row = $(`tr[data-product-id="${productId}"]`);
                            row.find('.quantity-input').val(result.quantity);
                            row.find('.cart_total_price').text(result.itemTotal);
                            $('#grandTotal').text(result.grandTotal);
                            // Cập nhật Amount cho form MoMo và VNPay
                            var grandTotalValue = result.grandTotalRaw || Math.floor(parseFloat(result.grandTotal.replace(/[^0-9,-]+/g, '').replace(/,/g, '')) || 0);
                            $('form[action$="/Payment/CreatePaymentMomo"] input[name="Amount"]').val(grandTotalValue);
                            $('form[action$="/Payment/CreatePaymentUrlVnpay"] input[name="Amount"]').val(grandTotalValue);
                            updateCartCount();
                            Swal.fire(result.message);
                        } else {
                            Swal.fire(result.message);
                        }
                    },
                    error: function () {
                        Swal.fire('Có lỗi xảy ra khi tăng số lượng.');
                    }
                });
            });

            // Giảm số lượng
            $('.btn-decrease').click(function () {
                var productId = $(this).data('id');
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("Decrease", "Cart")',
                    data: { Id: productId },
                    success: function (result) {
                        if (result.success) {
                            var row = $(`tr[data-product-id="${productId}"]`);
                            if (result.quantity === 0) {
                                row.remove();
                                if ($('#cartTableBody tr[data-product-id]').length === 0) {
                                    $('#cartTableBody').html(`
                                        <tr id="emptyCartMessage">
                                            <td colspan="6" style="padding: 60px; text-align: center;">
                                                <h4 style="color: var(--text-color); margin: 0; font-weight: 500; font-size: 1.5em;">@ShareLocallizer.GetLocalizedHTML("Your Cart is Empty")</h4>
                                                <p style="color: var(--text-color); opacity: 0.7; margin-top: 10px;">Hãy khám phá bộ sưu tập figure anime của chúng tôi!</p>
                                            </td>
                                        </tr>
                                    `);
                                }
                            } else {
                                row.find('.quantity-input').val(result.quantity);
                                row.find('.cart_total_price').text(result.itemTotal);
                            }
                            $('#grandTotal').text(result.grandTotal);
                            // Cập nhật Amount cho form MoMo và VNPay
                            var grandTotalValue = result.grandTotalRaw || Math.floor(parseFloat(result.grandTotal.replace(/[^0-9,-]+/g, '').replace(/,/g, '')) || 0);
                            $('form[action$="/Payment/CreatePaymentMomo"] input[name="Amount"]').val(grandTotalValue);
                            $('form[action$="/Payment/CreatePaymentUrlVnpay"] input[name="Amount"]').val(grandTotalValue);
                            updateCartCount();
                            Swal.fire(result.message);
                        } else {
                            Swal.fire(result.message);
                        }
                    },
                    error: function () {
                        Swal.fire('Có lỗi xảy ra khi giảm số lượng.');
                    }
                });
            });

            // Xóa sản phẩm
            $('.btn-remove').click(function () {
                var productId = $(this).data('id');
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("Remove", "Cart")',
                    data: { Id: productId },
                    success: function (result) {
                        if (result.success) {
                            $(`tr[data-product-id="${productId}"]`).remove();
                            $('#grandTotal').text(result.grandTotal);
                            // Cập nhật Amount cho form MoMo và VNPay
                            var grandTotalValue = result.grandTotalRaw || Math.floor(parseFloat(result.grandTotal.replace(/[^0-9,-]+/g, '').replace(/,/g, '')) || 0);
                            $('form[action$="/Payment/CreatePaymentMomo"] input[name="Amount"]').val(grandTotalValue);
                            $('form[action$="/Payment/CreatePaymentUrlVnpay"] input[name="Amount"]').val(grandTotalValue);
                            updateCartCount();
                            if ($('#cartTableBody tr[data-product-id]').length === 0) {
                                $('#cartTableBody').html(`
                                    <tr id="emptyCartMessage">
                                        <td colspan="6" style="padding: 60px; text-align: center;">
                                            <h4 style="color: var(--text-color); margin: 0; font-weight: 500; font-size: 1.5em;">@ShareLocallizer.GetLocalizedHTML("Your Cart is Empty")</h4>
                                            <p style="color: var(--text-color); opacity: 0.7; margin-top: 10px;">Hãy khám phá bộ sưu tập figure anime của chúng tôi!</p>
                                        </td>
                                    </tr>
                                `);
                            }
                            Swal.fire(result.message);
                        } else {
                            Swal.fire(result.message);
                        }
                    },
                    error: function () {
                        Swal.fire('Có lỗi xảy ra khi xóa sản phẩm.');
                    }
                });
            });

            // Xóa toàn bộ giỏ hàng
            $('.btn-clear-cart').click(function () {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("Clear", "Cart")',
                    success: function (result) {
                        if (result.success) {
                            $('#cartTableBody').html(`
                                <tr id="emptyCartMessage">
                                    <td colspan="6" style="padding: 60px; text-align: center;">
                                        <h4 style="color: var(--text-color); margin: 0; font-weight: 500; font-size: 1.5em;">@ShareLocallizer.GetLocalizedHTML("Your Cart is Empty")</h4>
                                        <p style="color: var(--text-color); opacity: 0.7; margin-top: 10px;">Hãy khám phá bộ sưu tập figure anime của chúng tôi!</p>
                                    </td>
                                </tr>
                            `);
                            $('#grandTotal').text(result.grandTotal);
                            // Cập nhật Amount cho form MoMo và VNPay
                            var grandTotalValue = result.grandTotalRaw || Math.floor(parseFloat(result.grandTotal.replace(/[^0-9,-]+/g, '').replace(/,/g, '')) || 0);
                            $('form[action$="/Payment/CreatePaymentMomo"] input[name="Amount"]').val(grandTotalValue);
                            $('form[action$="/Payment/CreatePaymentUrlVnpay"] input[name="Amount"]').val(grandTotalValue);
                            $('#shippingCost').text('0 VNĐ');
                            $('#couponCode').text('');
                            updateCartCount();
                            updateCheckoutButtons();
                            Swal.fire(result.message);
                        } else {
                            Swal.fire(result.message);
                        }
                    },
                    error: function () {
                        Swal.fire('Có lỗi xảy ra khi xóa toàn bộ giỏ hàng.');
                    }
                });
            });

            // Tính phí vận chuyển
            // $('.btn-add-shipping').click(function () {
            //     var tinh = $('#tinh').find('option:selected').text();
            //     var quan = $('#quan').find('option:selected').text();
            //     var phuong = $('#phuong').find('option:selected').text();
            //     var houseNumber = $('#houseNumber').val();
            //     if (tinh === 'Tỉnh Thành' || quan === 'Quận Huyện' || phuong === 'Phường Xã' || !houseNumber) {
            //         Swal.fire('Vui lòng nhập đầy đủ thông tin địa chỉ.');
            //         return;
            //     }
            //     $.ajax({
            //         type: 'POST',
            //         url: '@Url.Action("GetShipping", "Cart")',
            //         data: { tinh: tinh, quan: quan, phuong: phuong, houseNumber: houseNumber },
            //         success: function (result) {
            //             if (result.success) {
            //                 $('#shippingMessage').hide();
            //                 $('#shippingCost').text(result.shippingPrice);
            //                 updateCheckoutButtons();
            //                 Swal.fire('Tính phí vận chuyển thành công.');
            //             } else {
            //                 Swal.fire('Có lỗi khi tính phí vận chuyển.');
            //             }
            //         },
            //         error: function () {
            //             Swal.fire('Có lỗi xảy ra khi tính phí vận chuyển.');
            //         }
            //     });
            // });
                    // Tính phí vận chuyển
        $('.btn-add-shipping').click(function () {
            var tinh = $('#tinh').find('option:selected').text();
            var quan = $('#quan').find('option:selected').text();
            var phuong = $('#phuong').find('option:selected').text();
            var houseNumber = $('#houseNumber').val();
            var fullName = $('#fullName').val();
            var phoneNumber = $('#phoneNumber').val();

            if (tinh === 'Tỉnh Thành' || quan === 'Quận Huyện' || phuong === 'Phường Xã' || !houseNumber || !fullName || !phoneNumber) {
                Swal.fire('Vui lòng nhập đầy đủ thông tin địa chỉ, họ tên và số điện thoại.');
                return;
            }

            if (!/^[0-9]{10}$/.test(phoneNumber)) {
                Swal.fire('Số điện thoại phải là 10 chữ số.');
                return;
            }

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetShipping", "Cart")',
                data: { tinh: tinh, quan: quan, phuong: phuong, houseNumber: houseNumber, fullName: fullName, phoneNumber: phoneNumber },
                success: function (result) {
                    if (result.success) {
                        $('#shippingMessage').hide();
                        $('#shippingCost').text(result.shippingPrice);
                        updateCheckoutButtons();
                        Swal.fire('Tính phí vận chuyển thành công.');
                    } else {
                        Swal.fire('Có lỗi khi tính phí vận chuyển.');
                    }
                },
                error: function () {
                    Swal.fire('Có lỗi xảy ra khi tính phí vận chuyển.');
                }
            });
        });

        // Khôi phục giá trị từ Session nếu có
        var savedAddress = @Html.Raw(Json.Serialize(new { City = TempData["City"], District = TempData["District"], Ward = TempData["Ward"], HouseNumber = TempData["HouseNumber"], FullName = TempData["FullName"], PhoneNumber = TempData["PhoneNumber"] }));
        if (savedAddress.FullName) {
            $("#fullName").val(savedAddress.FullName);
        }
        if (savedAddress.PhoneNumber) {
            $("#phoneNumber").val(savedAddress.PhoneNumber);
        }
        /////

            // Xóa phí vận chuyển
            $('.btn-delete-shipping').click(function () {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DeleteShipping", "Cart")',
                    success: function (result) {
                        if (result.success) {
                            $('#shippingCost').text(result.shippingPrice);
                            $('#tinh').val('0');
                            $('#quan').html('<option value="0">Quận Huyện</option>');
                            $('#phuong').html('<option value="0">Phường Xã</option>');
                            $('#houseNumber').val('');
                            $('#shippingMessage').show();
                            updateCheckoutButtons();
                            Swal.fire(result.message);
                        } else {
                            Swal.fire(result.message);
                        }
                    },
                    error: function () {
                        Swal.fire('Có lỗi xảy ra khi xóa phí vận chuyển.');
                    }
                });
            });

            // Áp dụng coupon
            $('.btn-apply-coupon').click(function () {
                var coupon_value = $('.coupon-value').val();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetCoupon", "Cart")',
                    data: { coupon_value: coupon_value },
                    success: function (result) {
                        if (result.success) {
                            $('#couponCode').text(result.couponTitle);
                            $('#grandTotal').text(result.grandTotal);
                            // Cập nhật Amount cho form MoMo và VNPay
                            var grandTotalValue = result.grandTotalRaw || Math.floor(parseFloat(result.grandTotal.replace(/[^0-9,-]+/g, '').replace(/,/g, '')) || 0);
                            $('form[action$="/Payment/CreatePaymentMomo"] input[name="Amount"]').val(grandTotalValue);
                            $('form[action$="/Payment/CreatePaymentUrlVnpay"] input[name="Amount"]').val(grandTotalValue);
                            Swal.fire(result.message);
                        } else {
                            Swal.fire(result.message);
                        }
                    },
                    error: function () {
                        Swal.fire('Có lỗi xảy ra khi áp dụng coupon.');
                    }
                });
            });

            // Load danh sách tỉnh/thành phố, quận/huyện, phường/xã
            $.getJSON('https://esgoo.net/api-tinhthanh/1/0.htm', function (data_tinh) {
                if (data_tinh.error == 0) {
                    $.each(data_tinh.data, function (key_tinh, val_tinh) {
                        $("#tinh").append('<option value="' + val_tinh.id + '">' + val_tinh.full_name + '</option>');
                    });

                    // Khôi phục tỉnh/thành phố nếu có
                    if (savedAddress.City) {
                        $("#tinh option").filter(function () {
                            return $(this).text() === savedAddress.City;
                        }).prop('selected', true);
                        $("#tinh").trigger('change');
                    }

                    $("#tinh").change(function (e) {
                        var idtinh = $(this).val();
                        $.getJSON('https://esgoo.net/api-tinhthanh/2/' + idtinh + '.htm', function (data_quan) {
                            if (data_quan.error == 0) {
                                $("#quan").html('<option value="0">Quận Huyện</option>');
                                $("#phuong").html('<option value="0">Phường Xã</option>');
                                $.each(data_quan.data, function (key_quan, val_quan) {
                                    $("#quan").append('<option value="' + val_quan.id + '">' + val_quan.full_name + '</option>');
                                });

                                // Khôi phục quận/huyện nếu có
                                if (savedAddress.District && savedAddress.City === $("#tinh option:selected").text()) {
                                    $("#quan option").filter(function () {
                                        return $(this).text() === savedAddress.District;
                                    }).prop('selected', true);
                                    $("#quan").trigger('change');
                                }

                                $("#quan").change(function (e) {
                                    var idquan = $(this).val();
                                    $.getJSON('https://esgoo.net/api-tinhthanh/3/' + idquan + '.htm', function (data_phuong) {
                                        if (data_phuong.error == 0) {
                                            $("#phuong").html('<option value="0">Phường Xã</option>');
                                            $.each(data_phuong.data, function (key_phuong, val_phuong) {
                                                $("#phuong").append('<option value="' + val_phuong.id + '">' + val_phuong.full_name + '</option>');
                                            });

                                            // Khôi phục phường/xã nếu có
                                            if (savedAddress.Ward && savedAddress.District === $("#quan option:selected").text()) {
                                                $("#phuong option").filter(function () {
                                                    return $(this).text() === savedAddress.Ward;
                                                }).prop('selected', true);
                                            }
                                        } else {
                                            Swal.fire('Không thể tải danh sách phường/xã.');
                                        }
                                    }).fail(function () {
                                        Swal.fire('Lỗi kết nối khi tải danh sách phường/xã.');
                                    });
                                });
                            } else {
                                Swal.fire('Không thể tải danh sách quận/huyện.');
                            }
                        }).fail(function () {
                            Swal.fire('Lỗi kết nối khi tải danh sách quận/huyện.');
                        });
                    });
                } else {
                    Swal.fire('Không thể tải danh sách tỉnh/thành phố.');
                }
            }).fail(function () {
                Swal.fire('Lỗi kết nối khi tải danh sách tỉnh/thành phố.');
            });

            // Khôi phục số nhà nếu có
            if (savedAddress.HouseNumber) {
                $("#houseNumber").val(savedAddress.HouseNumber);
            }

            // Cập nhật trạng thái nút thanh toán khi tải trang
            updateCheckoutButtons();
        });
    </script>
}